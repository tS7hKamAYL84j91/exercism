// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function toRoman(input) {
  var numberNumeralOccurances = function (param, elem) {
    var residual = param[1];
    return /* tuple */[
            /* :: */[
              /* tuple */[
                Caml_int32.div(residual, elem[0]),
                elem[1]
              ],
              param[0]
            ],
            Caml_int32.mod_(residual, elem[0])
          ];
  };
  var fillList = function (element, length) {
    if (length <= 0) {
      return /* [] */0;
    } else {
      return /* :: */[
              element,
              fillList(element, length - 1 | 0)
            ];
    }
  };
  return $$String.concat("", List.flatten(List.map((function (param) {
                        return fillList(param[1], param[0]);
                      }), List.rev(List.fold_left(numberNumeralOccurances, /* tuple */[
                                /* [] */0,
                                input
                              ], List.sort((function (a, b) {
                                      var match = Caml_obj.caml_lessequal(a, b);
                                      if (match) {
                                        return 1;
                                      } else {
                                        return 0;
                                      }
                                    }), /* :: */[
                                    /* tuple */[
                                      1,
                                      "I"
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        4,
                                        "IV"
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          5,
                                          "V"
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            9,
                                            "IX"
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              10,
                                              "X"
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                40,
                                                "XL"
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  50,
                                                  "L"
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    90,
                                                    "XC"
                                                  ],
                                                  /* :: */[
                                                    /* tuple */[
                                                      100,
                                                      "C"
                                                    ],
                                                    /* :: */[
                                                      /* tuple */[
                                                        400,
                                                        "CD"
                                                      ],
                                                      /* :: */[
                                                        /* tuple */[
                                                          500,
                                                          "D"
                                                        ],
                                                        /* :: */[
                                                          /* tuple */[
                                                            900,
                                                            "CM"
                                                          ],
                                                          /* :: */[
                                                            /* tuple */[
                                                              1000,
                                                              "M"
                                                            ],
                                                            /* [] */0
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]))[0]))));
}

exports.toRoman = toRoman;
/* No side effect */
